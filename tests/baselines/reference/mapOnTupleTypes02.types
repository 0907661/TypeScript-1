=== tests/cases/compiler/mapOnTupleTypes02.ts ===
export type Point = [number, number];
>Point : [number, number]

export function increment(point: Point) {
>increment : (point: [number, number]) => number[]
>point : [number, number]
>Point : [number, number]

  return point.map(d => d + 1);
>point.map(d => d + 1) : number[]
>point.map : <U, Z = void>(callbackfn: (this: Z, value: number, index: number, array: number[]) => U, thisArg?: Z | undefined) => U[]
>point : [number, number]
>map : <U, Z = void>(callbackfn: (this: Z, value: number, index: number, array: number[]) => U, thisArg?: Z | undefined) => U[]
>d => d + 1 : (this: void, d: number) => number
>d : number
>d + 1 : number
>d : number
>1 : 1
}
