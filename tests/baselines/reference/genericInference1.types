=== tests/cases/compiler/genericInference1.ts ===
['a', 'b', 'c'].map(x => x.length);
>['a', 'b', 'c'].map(x => x.length) : number[]
>['a', 'b', 'c'].map : <U, Z = void>(callbackfn: (this: Z, value: string, index: number, array: string[]) => U, thisArg?: Z) => U[]
>['a', 'b', 'c'] : string[]
>'a' : "a"
>'b' : "b"
>'c' : "c"
>map : <U, Z = void>(callbackfn: (this: Z, value: string, index: number, array: string[]) => U, thisArg?: Z) => U[]
>x => x.length : (this: void, x: string) => number
>x : string
>x.length : number
>x : string
>length : number

